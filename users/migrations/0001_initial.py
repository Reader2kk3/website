# Generated by Django 4.1.7 on 2023-03-26 05:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Имя')),
                ('email', models.EmailField(blank=True, max_length=500, null=True, verbose_name='Почта')),
                ('username', models.CharField(blank=True, max_length=200, null=True, verbose_name='Никнейм')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Страна')),
                ('short_intro', models.CharField(blank=True, max_length=200, null=True, verbose_name='Короткая информация')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('profile_image', models.ImageField(blank=True, default='profiles/user-default.jpg', null=True, upload_to='profiles/', verbose_name='Изображение')),
                ('social_github', models.CharField(blank=True, max_length=200, null=True, verbose_name='Github')),
                ('social_twitter', models.CharField(blank=True, max_length=200, null=True, verbose_name='Twitter')),
                ('social_linkedin', models.CharField(blank=True, max_length=200, null=True, verbose_name='Linkedin')),
                ('social_youtube', models.CharField(blank=True, max_length=200, null=True, verbose_name='Youtube')),
                ('social_website', models.CharField(blank=True, max_length=200, null=True, verbose_name='Website')),
                ('creared', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['creared'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('creared', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Пользователь')),
                ('email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='Почта')),
                ('subject', models.CharField(blank=True, max_length=200, null=True, verbose_name='Заголовок')),
                ('body', models.TextField(verbose_name='Текст')),
                ('is_read', models.BooleanField(default=False, null=True, verbose_name='Прочитал')),
                ('creared', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='users.profile')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profile')),
            ],
            options={
                'ordering': ['is_read', '-creared'],
            },
        ),
    ]
